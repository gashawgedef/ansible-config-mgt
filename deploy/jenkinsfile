pipeline {
    agent any
    environment {
        ANSIBLE_CONFIG = "${WORKSPACE}/deploy/ansible.cfg"
        ANSIBLE_HOST_KEY_CHECKING = 'False'
    }
    parameters {
        string(name: 'inventory', defaultValue: 'dev', description: 'Inventory file for the environment to deploy configuration')
       
    }
    stages {
        stage("Initial Cleanup") {
            steps {
                dir("${WORKSPACE}") {
                    deleteDir() // Clean the workspace to avoid residual files
                }
            }
        }

        stage('Print Workspace') {
            steps {
                script {
                    echo "The current workspace is: ${env.WORKSPACE}"
                }
            }
        }

        stage('Checkout SCM') {
            steps {
                git branch: 'main', 
                    credentialsId: 'gashity_token', 
                    url: 'https://github.com/gashawgedef/ansible-config-mgt.git'
            }
        }

       stage('Test SSH Connection') {
            steps {
                sshagent(['private_key']) { // Ensure 'private_key' is correctly configured in Jenkins
                    sh 'ssh -o StrictHostKeyChecking=no ubuntu@172.31.22.35 exit'
                }
            }
        }

       stage('Run Ansible Playbook') {
           steps {
              ansiblePlaybook credentialsId: 'private_key',
              disableHostKeyChecking: true,
              installation: 'ansible-config-mgt',
              inventory: "${WORKSPACE}/inventory/${inventory}.yml",
              playbook: "${WORKSPACE}/playbooks/site.yml",
              extraVars: "",
              options: '--tags webserver'
              // vaultTmpPath: '',
              // extraVars: [ansible_tags: 'webserver'] // Limit execution to the webserver role only
    }
}


        stage('Clean Workspace After Build') {
            steps {
                cleanWs(cleanWhenAborted: true, cleanWhenFailure: true, cleanWhenNotBuilt: true, cleanWhenUnstable: true, deleteDirs: true)
            }
        }
    }
}
